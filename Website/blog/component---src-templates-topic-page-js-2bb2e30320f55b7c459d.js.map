{"version":3,"sources":["webpack:///./src/templates/topic-page.js","webpack:///./src/components/cardSmall.js"],"names":["TopicPageTemplate","pageContext","data","topic","edgesWithTopic","allMarkdownRemark","edges","filter","node","frontmatter","tags","includes","topicInfo","allTopicsJson","slug","toLowerCase","replace","pageType","className","fluid","image","childImageSharp","alt","name","id","map","index","key","fields","type","aria-label","value","Card","to","featuredImage","title","category"],"mappings":"yOA+HeA,UAvHW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrBC,EAAI,OAgDFC,EAAUF,EAAVE,MAGFC,EAFYF,EAAKG,kBAAfC,MAEqBC,QAAO,YAClC,OADgD,EAAXC,KACzBC,YAAYC,KAAKC,SAASR,MAGlCS,EAAYV,EAAKW,cAAcP,MAAMC,QAAO,YAChD,OAD8D,EAAXC,KACvCM,OAASX,EAAMY,cAAcC,QAAQ,IAAK,QACrD,GAAGR,KAEN,OACE,kBAAC,IAAD,CAAQS,SAAS,SACf,yBAAKC,UAAU,qBACb,4BAAKf,GACL,kBAAC,IAAD,CACEe,UAAU,mBACVC,MAAOP,EAAUQ,MAAMC,gBAAgBF,MACvCG,IAAKV,EAAUW,OACd,KAEL,yBAAKL,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIM,GAAG,kBAAP,YACCpB,EAAeqB,KAAI,WAAWC,GAAW,IAAnBlB,EAAkB,EAAlBA,KACrB,OACE,kBAAC,IAAD,CACEmB,IAAKnB,EAAKoB,OAAOd,KACjBA,KAAMN,EAAKoB,OAAOd,KAClBL,YAAaD,EAAKC,kBAK1B,yBAAKS,UAAU,WACb,wBAAIA,UAAU,kBAAd,gBACA,yBAAKA,UAAU,kBACb,iDACA,6EACA,8BACE,2BAAOW,KAAK,OAAOL,GAAG,QAAQM,aAAW,UACzC,2BACED,KAAK,SACLE,MAAM,YACND,aAAW,cACV,KAGL,0EAEF,wBAAIZ,UAAU,kBAAd,oBACA,yBAAKA,UAAU,mBACZhB,EAAKG,kBAAkBC,MAAMmB,KAAI,WAAWC,GAAW,IAAnBlB,EAAkB,EAAlBA,KACnC,OAAIkB,EAAQ,GAAKA,EAAQ,EAErB,kBAAC,IAAD,CACEC,IAAKnB,EAAKoB,OAAOd,KACjBA,KAAMN,EAAKoB,OAAOd,KAClBL,YAAaD,EAAKC,cAGV,c,s0hBC7FbuB,IArBF,SAAC,GAA2B,IAAzBvB,EAAwB,EAAxBA,YAAaK,EAAW,EAAXA,KAC3B,OACE,4BAAQI,UAAU,qBAChB,kBAAC,OAAD,CAAMe,GAAInB,GACR,kBAAC,IAAD,CACEI,UAAU,mBACVC,MAAOV,EAAYyB,cAAcb,gBAAgBF,SAIrD,oCACE,kBAAC,OAAD,CAAMc,GAAInB,GACR,4BAAKL,EAAY0B,QAEnB,kBAAC,OAAD,CAAMF,GAAE,IAAMxB,EAAY2B,SAASrB,cAAcC,QAAQ,IAAK,MAC5D,0BAAME,UAAU,oBAAoBT,EAAY2B","file":"component---src-templates-topic-page-js-2bb2e30320f55b7c459d.js","sourcesContent":["import React from \"react\"\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport Card from \"../components/card\"\nimport CardSmall from \"../components/cardSmall\"\nimport Layout from \"../components/layout\"\n\nconst TopicPageTemplate = ({ pageContext }) => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n              tags\n              category\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 400) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, maxHeight: 240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const { topic } = pageContext\n  const { edges } = data.allMarkdownRemark\n\n  const edgesWithTopic = edges.filter(({ node }) => {\n    return node.frontmatter.tags.includes(topic)\n  })\n\n  const topicInfo = data.allTopicsJson.edges.filter(({ node }) => {\n    return node.slug === topic.toLowerCase().replace(\" \", \"-\")\n  })[0].node\n\n  return (\n    <Layout pageType=\"Topic\">\n      <div className=\"topic-page-header\">\n        <h1>{topic}</h1>\n        <Image\n          className=\"topic-page-image\"\n          fluid={topicInfo.image.childImageSharp.fluid}\n          alt={topicInfo.name}\n        />{\" \"}\n      </div>\n      <div className=\"flex-layout\">\n        <div className=\"cards\">\n          <h2 id=\"articles-title\">Articles</h2>\n          {edgesWithTopic.map(({ node }, index) => {\n            return (\n              <Card\n                key={node.fields.slug}\n                slug={node.fields.slug}\n                frontmatter={node.frontmatter}\n              />\n            )\n          })}\n        </div>\n        <div className=\"sidebar\">\n          <h2 className=\"sidebar-header\">Mailing List</h2>\n          <div className=\"sidebar-emails\">\n            <h2>Mailing list here</h2>\n            <p>Subscribe to my list for lots of great reasons</p>\n            <form>\n              <input type=\"text\" id=\"email\" aria-label=\"email\" />\n              <input\n                type=\"submit\"\n                value=\"Subscribe\"\n                aria-label=\"subscribe\"\n              />{\" \"}\n            </form>\n\n            <span>Weekly updates, unsubscribe at any time</span>\n          </div>\n          <h2 className=\"sidebar-header\">Popular Articles</h2>\n          <div className=\"sidebar-popular\">\n            {data.allMarkdownRemark.edges.map(({ node }, index) => {\n              if (index > 2 && index < 5) {\n                return (\n                  <CardSmall\n                    key={node.fields.slug}\n                    slug={node.fields.slug}\n                    frontmatter={node.frontmatter}\n                  />\n                )\n              } else return null\n            })}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TopicPageTemplate\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Card = ({ frontmatter, slug }) => {\n  return (\n    <figure className=\"card-small-styles\">\n      <Link to={slug}>\n        <Image\n          className=\"card-small-image\"\n          fluid={frontmatter.featuredImage.childImageSharp.fluid}\n        />\n      </Link>\n\n      <figcaption>\n        <Link to={slug}>\n          <h3>{frontmatter.title}</h3>\n        </Link>\n        <Link to={`/${frontmatter.category.toLowerCase().replace(\" \", \"-\")}`}>\n          <span className=\"card-small-topic\">{frontmatter.category}</span>\n        </Link>\n      </figcaption>\n    </figure>\n  )\n}\nexport default Card\n"],"sourceRoot":""}