{"version":3,"sources":["webpack:///./src/components/featured.js","webpack:///./src/components/search.js","webpack:///./src/pages/index.js","webpack:///./src/components/cardSmall.js"],"names":["Featured","markdown","id","edges","map","index","node","key","fields","slug","className","to","fluid","frontmatter","featuredImage","childImageSharp","title","category","Search","query","filteredPosts","filter","titleMatch","toLowerCase","includes","topicMatch","tagsMatch","tags","tag","some","descriptionMatch","description","length","replace","type","aria-label","value","IndexPage","props","data","location","search","split","queryType","allMarkdownRemark","tagsGroup","Card"],"mappings":"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","file":"component---src-pages-index-js-3810fead3b1f2694073d.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Featured = ({ markdown }) => {\n  if (!markdown) {\n    return <div>...loading</div>\n  } else {\n    return (\n      <div id=\"featured\">\n        {markdown.edges.map(({ node }, index) => {\n          if (index === 0) {\n            return (\n              <figure\n                key={node.fields.slug}\n                className=\"featured-link featured-main\"\n              >\n                <Link to={node.fields.slug}>\n                  <div className=\"featured-overlay\"></div>\n                  <Image\n                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  />\n                  <figcaption>\n                    <h2>{node.frontmatter.title}</h2>\n                    <span>{node.frontmatter.category}</span>\n                  </figcaption>\n                </Link>\n              </figure>\n            )\n          } else if (index < 3) {\n            return (\n              <figure\n                key={node.fields.slug}\n                className=\"featured-link featured-secondary\"\n              >\n                <Link to={node.fields.slug}>\n                  <div className=\"featured-overlay\"></div>\n                  <Image\n                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  />\n                  <figcaption>\n                    <h2>{node.frontmatter.title}</h2>\n                    <span>{node.frontmatter.category}</span>\n                  </figcaption>\n                </Link>\n              </figure>\n            )\n          } else return null\n        })}\n      </div>\n    )\n  }\n}\nexport default Featured\n","import React from \"react\"\nimport Card from \"./card\"\nimport CardSmall from \"./cardSmall\"\n\nconst Search = ({ markdown, query }) => {\n  const blogPosts = markdown.edges\n\n  const filteredPosts = blogPosts.filter(({ node }) => {\n    const { frontmatter } = node\n\n    const titleMatch = frontmatter.title\n      .toLowerCase()\n      .includes(query.toLowerCase())\n    const topicMatch = frontmatter.category\n      .toLowerCase()\n      .includes(query.toLowerCase())\n    const tagsMatch = frontmatter.tags\n      .map(tag => tag.toLowerCase())\n      .some(tag => tag.includes(query.toLowerCase()))\n    const descriptionMatch = frontmatter.description\n      .toLowerCase()\n      .includes(query.toLowerCase())\n\n    return titleMatch || topicMatch || tagsMatch || descriptionMatch\n  })\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"page-header\">\n          {filteredPosts.length > 0 ? \"Search results \" : \"No results \"}\n          for \"<strong>{query.replace(\"%20\", \" \")}</strong>\"\n        </h2>\n        <div className=\"flex-layout\">\n          <div className=\"cards\">\n            <h2 id=\"articles-title\">Articles</h2>\n            {filteredPosts.map(({ node }, index) => {\n              return (\n                <Card\n                  key={node.id}\n                  slug={node.fields.slug}\n                  frontmatter={node.frontmatter}\n                />\n              )\n            })}\n          </div>\n          <div className=\"sidebar\">\n            <h2 className=\"sidebar-header\">Mailing List</h2>\n            <div className=\"sidebar-emails\">\n              <h2>Mailing list here</h2>\n              <p>Subscribe to my list for lots of great reasons</p>\n              <form>\n                <input type=\"text\" id=\"email\" aria-label=\"email\" />\n                <input\n                  type=\"submit\"\n                  value=\"Subscribe\"\n                  aria-label=\"subscribe\"\n                />{\" \"}\n              </form>\n              <span>Weekly updates, unsubscribe at any time</span>\n            </div>\n            <h2 className=\"sidebar-header\">Popular Articles</h2>\n            <div className=\"sidebar-popular\">\n              {markdown.edges.map(({ node }, index) => {\n                if (index > 2 && index < 5) {\n                  return (\n                    <CardSmall\n                      key={node.id}\n                      slug={node.fields.slug}\n                      frontmatter={node.frontmatter}\n                    />\n                  )\n                } else return null\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Search\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Card from \"../components/card\"\nimport CardSmall from \"../components/cardSmall\"\nimport Featured from \"../components/featured\"\nimport Search from \"../components/search\"\n\nconst IndexPage = props => {\n  const data = useStaticQuery(graphql`\n    {\n      tagsGroup: allMarkdownRemark(limit: 100) {\n        group(field: frontmatter___tags) {\n          fieldValue\n        }\n      }\n      allMarkdownRemark {\n        edges {\n          node {\n            id\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n              category\n              tags\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 600) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const [queryType, query] = props.location.search.split(\"=\")\n\n  if (queryType === \"?s\" && query.length > 0) {\n    return (\n      <Layout>\n        <Search\n          markdown={data.allMarkdownRemark}\n          tagsGroup={data.tagsGroup}\n          query={query}\n        />\n      </Layout>\n    )\n  } else {\n    return (\n      <Layout>\n        <SEO title=\"Home\" slug=\"/\" />\n        <Featured markdown={data.allMarkdownRemark} />\n        <div className=\"flex-layout\">\n          <div className=\"cards\">\n            <h2 id=\"articles-title\">Articles</h2>\n            {data.allMarkdownRemark.edges.map(({ node }, index) => {\n              if (index < 3) {\n                return null\n              } else {\n                return (\n                  <Card\n                    key={node.id}\n                    slug={node.fields.slug}\n                    frontmatter={node.frontmatter}\n                  />\n                )\n              }\n            })}\n          </div>\n          <div className=\"sidebar\">\n            <h2 className=\"sidebar-header\">Mailing List</h2>\n            <div className=\"sidebar-emails\">\n              <h2>Mailing list here</h2>\n              <p>Subscribe to my list for lots of great reasons</p>\n              <form>\n                <input type=\"text\" id=\"email\" aria-label=\"email\" />\n                <input\n                  type=\"submit\"\n                  value=\"Subscribe\"\n                  aria-label=\"subscribe\"\n                />{\" \"}\n              </form>\n              <span>Weekly updates, unsubscribe at any time</span>\n            </div>\n            <h2 className=\"sidebar-header\">Popular Articles</h2>\n            <div>\n              {data.allMarkdownRemark.edges.map(({ node }, index) => {\n                if (index > 2 && index < 5) {\n                  return (\n                    <CardSmall\n                      key={node.id}\n                      slug={node.fields.slug}\n                      frontmatter={node.frontmatter}\n                    />\n                  )\n                } else return null\n              })}\n            </div>\n          </div>\n        </div>\n        <Link to=\"/archive/2\" id=\"archive-link\">\n          More Articles\n          <FaAngleDoubleRight className=\"icon-right\" />\n        </Link>{\" \"}\n        <br />\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Card = ({ frontmatter, slug }) => {\n  return (\n    <figure className=\"card-small-styles\">\n      <Link to={slug}>\n        <Image\n          className=\"card-small-image\"\n          fluid={frontmatter.featuredImage.childImageSharp.fluid}\n        />\n      </Link>\n\n      <figcaption>\n        <Link to={slug}>\n          <h3>{frontmatter.title}</h3>\n        </Link>\n        <Link to={`/${frontmatter.category.toLowerCase().replace(\" \", \"-\")}`}>\n          <span className=\"card-small-topic\">{frontmatter.category}</span>\n        </Link>\n      </figcaption>\n    </figure>\n  )\n}\nexport default Card\n"],"sourceRoot":""}